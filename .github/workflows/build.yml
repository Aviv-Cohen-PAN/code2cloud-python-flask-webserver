name: CI/CD

on: [push]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '16.x'
      - name: Install Dependencies
        run: npm install
      - name: Run Tests
        run: npm test

  deploy_to_production:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Configure AWS Credentials
        run: |
          echo "${{ secrets.AWS_ACCESS_KEY_ID }}" > aws_access_key_id
          echo "${{ secrets.AWS_SECRET_ACCESS_KEY }}" > aws_secret_access_key
      - name: Deploy to EKS
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x ./kubectl
          sudo mv ./kubectl /usr/local/bin/kubectl
          pip install awscli --upgrade
          aws --version
          aws eks update-kubeconfig --name my-cluster
          LATEST_SHA=$(git rev-parse HEAD)
          docker build -t express-eks:$LATEST_SHA .
          docker tag express-eks:$LATEST_SHA 213561109591.dkr.ecr.us-east-1.amazonaws.com/express-eks:$LATEST_SHA
          docker push 213561109591.dkr.ecr.us-east-1.amazonaws.com/express-eks:$LATEST_SHA
          docker tag express-eks:$LATEST_SHA 213561109591.dkr.ecr.us-east-1.amazonaws.com/express-eks:latest
          docker push 213561109591.dkr.ecr.us-east-1.amazonaws.com/express-eks:latest
          DEPLOY_CMD="./kubectl set image deployment/myapp myapp=213561109591.dkr.ecr.us-east-1.amazonaws.com/express-eks:$LATEST_SHA -n default"
          if [[ ${{ steps.check_deployment.outputs.deployment_exists }} == "true" ]]; then
            $DEPLOY_CMD
          else
            echo "Creating new deployment"
            kubectl create deployment myapp --image=213561109591.dkr.ecr.us-east-1.amazonaws.com/express-eks:$LATEST_SHA -n default
          fi
